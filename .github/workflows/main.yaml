name: workflow

on: 
    push:
        branches:
            - main


permissions:
    id-token: write
    contents: read

jobs:
    integration:
        name: Continuous Integration
        runs-on: ubuntu-latest
        
        steps:
            - name: checkout code
              uses: actions/checkout@v3

            - name: Lint Code
              run: echo "Linting Code"

            - name: Run unit test
              run: echo "Run Unit Test"

    build-and-push-ecr-images:
        name: Continous Delivery
        needs: integration
        runs-on: ubuntu-latest
        steps:
            - name: checkout code
              uses: actions/checkout@v3

            - name: Install utilities
              run: |
                sudo apt-get update
                sudo apt-get install -y jq unzip

            - name: Aws Configure
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region: ${{secrets.AWS_REGION}}

            - name: login to ecr
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: build, tag and push image to ecr
              id: build-image
              env:
                ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
                ECR_REPOSITORY: ${{secrets.ECR_REPOSITORY_NAME}}
                IMAGE_TAG: latest
              run: |
                ##Build a docker and push to ECR
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    #ecr-uri  = 954976308776.dkr.ecr.eu-north-1.amazonaws.com/student-performance          

    continuous-deployment:
        name: Continuous Deployment
        needs: build-and-push-ecr-images
        runs-on: self-hosted
        steps:
            - name: checkout code
              uses: actions/checkout@v3

            - name: aws configure
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
                aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region: ${{secrets.AWS_REGION}}

            - name: aws ecr login
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: pull latest image
              run: |
                docker pull ${{secrets.AWS_ECR_LOGIN_URI}}/${{secrets.ECR_REPOSITORY_NAME}}:latest

            - name: Run docker image to serve user
              run: |
                docker run -d -p 8080:8080 --name=mltest --ipc="host" -e 'AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}}' -e 'AWS_ACCESS_SECRET_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}' -e 'AWS_REGION=${{secrets.AWS_REGION}}'

            - name: clean previous images
              run: |
                docker system prune -f




